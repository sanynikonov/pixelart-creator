@page "/pixelarts/create"
@inject IFileService _fileService

<h3>CreatePixelart</h3>

<InputFile OnChange="UploadFile" />

<div class="container mt-5">
    <div class="row">
        <div class="col-sm-4">
            <p class="text-center display-4">Options</p>
            
            <EditForm Model="@_options">
                <div class="d-flex flex-row">
                    <div class="flex-column p-1">
                        <label>Unit</label>
                        <div class="h-100 form-group">
                            <InputSelect id="unit" class="h-50 form-control align-content-center" @bind-Value="_options.Unit">
                                <option selected value="@SizeUnit.Pixel">@SizeUnit.Pixel</option>
                                <option value="@SizeUnit.Map">@SizeUnit.Map</option>
                            </InputSelect>
                        </div>
                    </div>
                    <div class="flex-column p-1">
                        <label>Width/Height</label>
                        <div class="form-group">
                            <InputNumber id="width" class="form-control" @bind-Value="_options.Width" />
                            <InputNumber id="height" class="form-control" @bind-Value="_options.Height" />
                        </div>
                    </div>
                </div>
            </EditForm>
            
        </div>
        <div class="col-sm-8">
            <div class="mt-3 btn-group d-flex">
                <button class="flex-fill btn @TabColour(Source)"
                        @onclick="@(() => ChangeActiveTab(Source))">
                    Photo
                </button>
                <button class="flex-fill btn @TabColour(Result)"
                        @onclick="@(() => ChangeActiveTab(Result))">
                    Pixelart
                </button>
            </div>

            @if (_activeTab == Source)
            {
                @if (_uploadedFileName != null)
                {
                    <img class="img-fluid" src="Images/@_uploadedFileName" />
                }
                else
                {
                    <p>Upload a photo</p>
                }
            }
            else if (_activeTab == Result)
            {
                <p>Click submit button to create a pixelart</p>
            }
        </div>
    </div>
</div>

@code {
    private string _activeTab = Source;
    private const string Source = "Source";
    private const string Result = "Result";

    private string TabColour(string tabName) => _activeTab == tabName ? "btn-primary" : "btn-secondary";

    private void ChangeActiveTab(string tabName) => _activeTab = tabName;

    private PixelartOptions _options = new PixelartOptions { Unit = SizeUnit.Pixel };

    private string _uploadedFileName;

    private async Task UploadFile(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();

        if (file != null)
        {
            var model = new FileUploadModel
            {
                OldName = file.Name,
                Stream = file.Data
            };

            var name = await _fileService.UploadImageAsync(model);

            _uploadedFileName = name;
        }

        UpdateOptionsFromUploadedFile();
    }

    private void UpdateOptionsFromUploadedFile()
    {
        var image = _fileService.GetImageInfo(_uploadedFileName);
        _options.Width = image.Width;
        _options.Height = image.Height;
        _options.Unit = SizeUnit.Pixel;
    }


}
