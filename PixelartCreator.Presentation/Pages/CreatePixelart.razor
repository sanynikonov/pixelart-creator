@page "/pixelarts/create"
@inject IFileService _fileService

<h3>CreatePixelart</h3>

<InputFile OnChange="UploadFile" />

<div class="mt-3 btn-group d-flex">
    <button class="flex-fill btn @(_activeTab == "Source" ? "btn-primary" : "btn-secondary")"
            @onclick="@(() => ChangeActiveTab("Source"))">
        Photo
    </button>
    <button class="flex-fill btn @(_activeTab == "Result" ? "btn-primary" : "btn-secondary")"
            @onclick="@(() => ChangeActiveTab("Result"))">
        Pixelart
    </button>
</div>

@if (_activeTab == "Source")
{
    @if (_uploadedFileName != null)
    {
        <img class="img-fluid" src="Images/@_uploadedFileName" />
    }
    else
    {
        <p>Upload a photo</p>
    }
}
else if (_activeTab == "Result")
{
    <p>Kek</p>
}
@code {
    private string[] _tabs = { "Source", "Result" };
    private string _activeTab = "Source";

    private void ChangeActiveTab(string tabName)
    {
        _activeTab = tabName;
    }

    private string _uploadedFileName;

    public async Task UploadFile(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();

        if (file != null)
        {
            var model = new FileUploadModel
            {
                OldName = file.Name,
                Stream = file.Data
            };

            var name = await _fileService.UploadImageAsync(model);

            _uploadedFileName = name;
        }
    }
}
